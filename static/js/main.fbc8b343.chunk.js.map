{"version":3,"sources":["components/phonebook.module.css","redux/contactsSlice.js","components/ContactForm.js","components/Contacts.js","components/Filter.js","App.js","redux/store.js","index.js"],"names":["module","exports","contactsSlice","createSlice","name","initialState","items","id","number","filteredItems","error","reducers","contactsAdd","state","action","some","c","payload","push","contactsDelete","filter","findContact","includes","actions","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","contacts","handleInputChange","e","currentTarget","value","className","styles","form","onSubmit","event","preventDefault","newContact","shortid","generate","type","pattern","title","inputName","onChange","required","inputTel","btnForm","Contacts","list","map","item","contact","onClick","btnList","Filter","query","setQuery","handleChange","useCallback","target","handleSearch","inputFilter","btnFilter","App","container","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbc8b343.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phonebook_container__2oijz\",\"form\":\"phonebook_form__3g7Ie\",\"inputName\":\"phonebook_inputName__2xrYp\",\"inputTel\":\"phonebook_inputTel__2jGo_\",\"btnForm\":\"phonebook_btnForm__1HUmK\",\"error\":\"phonebook_error__hGYP0\",\"list\":\"phonebook_list__2ZBtq\",\"contact\":\"phonebook_contact__33bG8\",\"btnList\":\"phonebook_btnList__F-HlJ\",\"inputFilter\":\"phonebook_inputFilter__280tH\",\"btnFilter\":\"phonebook_btnFilter__ZgwYn\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst INITIAL_STATE = {\r\nitems: [\r\n          { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n          { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n          { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n          { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\nfilteredItems: [], \r\nerror: '',\r\n      }\r\n\r\nexport const contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: INITIAL_STATE,\r\n  reducers: {\r\n    contactsAdd: (state, action) => {\r\n      if (state.items.some((c) => c.name === action.payload.name)) {\r\n             state.error = 'This contact is already exists in contacts'\r\n            } else {\r\n               state.items.push(action.payload);\r\n            }  },\r\n          \r\n    contactsDelete: (state, action) => {\r\n      state.items = state.items.filter((c) => {\r\n        return c.id !== action.payload;\r\n      } ) ;\r\n    },\r\n\r\n    findContact: (state, action) => {\r\n      state.filteredItems = state.items.filter((c) =>\r\n       c.name.includes(action.payload))\r\n      \r\n    },\r\n      } \r\n  },\r\n)\r\n\r\nexport const { contactsAdd, contactsDelete, findContact } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;","import { useState } from 'react';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector }  from 'react-redux';\r\nimport { contactsAdd } from '../redux/contactsSlice'\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './phonebook.module.css'\r\n\r\nconst ContactForm = () => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const error = useSelector((state) => state.contacts.error);\r\n\r\n  const handleInputChange = (e) => {\r\n      const { name, value } = e.currentTarget;\r\n\r\n      switch (name) {\r\n          case 'name':\r\n              setName(value);\r\n              break;\r\n          case 'number':\r\n              setNumber(value);\r\n              break;\r\n          default:\r\n              return;\r\n      }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      const newContact = {\r\n        id: shortid.generate(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n           \r\n    dispatch(contactsAdd(newContact))\r\n        \r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n      <div>\r\n      <form\r\n          className={styles.form} onSubmit={handleSubmit} >\r\n          <>\r\n          <label> Name\r\n          <input type=\"text\" name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  className={styles.inputName}\r\n                  value={name}\r\n                  onChange={handleInputChange}\r\n                  required />\r\n          </label>    \r\n              \r\n              <label>Tel\r\n                  <input type=\"tel\" name=\"number\" \r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Номер телефона должен состоять цифр может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                  className={styles.inputTel} value={number} onChange={handleInputChange} required />\r\n              </label>    \r\n              \r\n          <button  type=\"submit\"\r\n              className={styles.btnForm} >\r\n              Add contact\r\n              </button>\r\n          </>    \r\n      </form>\r\n      {error && <p className={styles.error}>{error}</p>}\r\n </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useDispatch, useSelector }  from 'react-redux';\r\nimport {contactsDelete} from '../redux/contactsSlice'\r\nimport styles from './phonebook.module.css'\r\n\r\nfunction Contacts() {\r\n    const items = useSelector((state) => state.contacts.items);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const deleteContact = id => {\r\n        dispatch(contactsDelete(id))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n             {items.map((item) => (\r\n            <p key={item.id} className={styles.contact}>{item.name}: {item.number}\r\n            <button type=\"button\" onClick={() => deleteContact(item.id)} className={styles.btnList}>\r\n                 delete contact\r\n            </button>\r\n            </p>\r\n             ))}\r\n        </div>\r\n    )}\r\n\r\nexport default Contacts;","import React, {useCallback, useState} from 'react';\r\nimport {findContact} from '../redux/contactsSlice'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from './phonebook.module.css'\r\n\r\nfunction Filter() {\r\nconst dispatch = useDispatch();\r\nconst filteredItems = useSelector((state) => state.contacts.filteredItems);\r\n\r\nconst [query, setQuery] = useState('');\r\n\r\nconst handleChange = useCallback((e) => {\r\n    setQuery(e.target.value);\r\n})\r\n\r\nconst handleSearch = useCallback(() => {\r\n        dispatch(findContact(query));\r\n}, [dispatch, query]);\r\n\r\n    return ( \r\n   <div>\r\n    <label>\r\n        Find contacts by name\r\n        <input type=\"text\" value={query} \r\n        onChange={handleChange} className={styles.inputFilter}/>\r\n        <button onClick={handleSearch} className={styles.btnFilter}>Найти контакт</button>\r\n      </label>\r\n       {filteredItems.map((item) => (\r\n        <p key={item.id}>{item.name}: {item.number}\r\n        </p>\r\n         ))}\r\n    </div>\r\n );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport styles from './components/phonebook.module.css'\r\nimport ContactForm from './components/ContactForm';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from './components/Filter';\r\n  \r\n  function App () {\r\n \r\n        return (\r\n        <div className={styles.container}>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm />\r\n\r\n          <h2>Contacts</h2>\r\n         <Contacts />\r\n\r\n          <Filter />\r\n        </div>\r\n      )\r\n        }\r\n  export default App;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactsReducer from './contactsSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer\r\n  }\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport {store} from './redux/store'\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// eslint config prettier"],"sourceRoot":""}